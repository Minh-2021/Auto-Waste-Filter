
const int xPin = A0;
const int yPin = A1;
const int motor1DPin1 = 13;
const int motor1DPin2 = 12;
const int motor2DPin1 = 11;
const int motor2DPin2 = 10;
const int speedPin1 = 6;
const int speedPin2 = 5;
int xVal, yVal, yDist, xDist, motorSpeedLeft, motorSpeedRight;
float speedRatio;
void setup() {
  // put your setup code here, to run once:
  for (int i = 13; i >= motor2DPin2; i--) {
    pinMode(i, OUTPUT);
  }
  pinMode(speedPin1, OUTPUT);
  pinMode(speedPin2, OUTPUT);
  pinMode(xPin, INPUT);
  pinMode(yPin, INPUT);
  Serial.begin(9600);
}

void loop() {
  // put your main code here, to run repeatedly:
  xVal = analogRead(xPin); // Read the values of the joystick
  yVal = analogRead(yPin);

  Serial.print("X Value: "); // Send values to the console
  Serial.print(xVal);

  Serial.print(", Y Value: ");
  Serial.println(yVal);
  yDist = Distancefind(yVal);
  xDist = Distancefind(xVal);

  Serial.print("X Distance: "); // Sends distance to the console
  Serial.print(xDist);
  Serial.print(", Y Distance: ");
  Serial.println(yDist);
  speedRatio = 1 - map(xDist, 0, 512, 0, 500) * .001; // Finds the ratio of the speed of the motors by using the distance of the Joystick from the center
  // Ratio is 1:1 to 1:2
  if (xVal > 512) { // Turning right
    motorSpeedRight = map(xDist, 0, 512, 0, 255);
    motorSpeedLeft = round(motorSpeedRight * speedRatio); 
  }
  else if (xVal < 512) { // Turning Left
    motorSpeedLeft = map(xDist, 0 , 512, 0, 255);
    motorSpeedRight = round(motorSpeedLeft * speedRatio);
  }
  Motorcontrol();
}

int Distancefind(int value) {
  int distance;
  if (value > 572) {
    distance = 1024 - value;
  }
  else if (value < 452) {
    distance = value;
  }
  return distance;
}

void Motorcontrol() {
  if (yVal > 572) {
    analogWrite(speedPin1, motorSpeedLeft);
    analogWrite(speedPin2, motorSpeedRight);
    digitalWrite(motor1DPin1, HIGH);
    digitalWrite(motor1DPin2, LOW);
    digitalWrite(motor1DPin1, HIGH);
    digitalWrite(motor1DPin2, LOW);
  }
  else if (yVal < 452) {
    analogWrite(speedPin1, motorSpeedLeft);
    analogWrite(speedPin2, motorSpeedRight);
    digitalWrite(motor1DPin1, LOW);
    digitalWrite(motor1DPin2, HIGH);
    digitalWrite(motor1DPin1, LOW);
    digitalWrite(motor1DPin2, HIGH);
  }
  else {
    analogWrite(speedPin1, 0);
    analogWrite(speedPin2, 0);
    digitalWrite(motor1DPin1, LOW);
    digitalWrite(motor1DPin2, LOW);
    digitalWrite(motor1DPin1, LOW);
    digitalWrite(motor1DPin2, LOW);
  }
}
